import{_ as e,a as s,o as a,a2 as o}from"./chunks/framework.tRhScCHO.js";const k=JSON.parse('{"title":"Todo 待办","description":"","frontmatter":{},"headers":[],"relativePath":"examples/todo.md","filePath":"examples/todo.md"}'),t={name:"examples/todo.md"},i=o(`<h1 id="todo-待办" tabindex="-1">Todo 待办 <a class="header-anchor" href="#todo-待办" aria-label="Permalink to &quot;Todo 待办&quot;">​</a></h1><h2 id="button-组件" tabindex="-1">button 组件 <a class="header-anchor" href="#button-组件" aria-label="Permalink to &quot;button 组件&quot;">​</a></h2><div class="tip custom-block"><p class="custom-block-title">✍️✍️✍️</p><p>对于文本按钮的禁用使用的是 <code>CSS</code> 样式, 让鼠标事件失效</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  pointer-events</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">none</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; // 不接受鼠标事件</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>导致禁用文本按钮的鼠标样式修改不生效<br><strong>任务: <em>让文本禁用按钮的鼠标样式生效</em></strong></p></div><h2 id="menu-组件" tabindex="-1">menu 组件 <a class="header-anchor" href="#menu-组件" aria-label="Permalink to &quot;menu 组件&quot;">​</a></h2><div class="tip custom-block"><p class="custom-block-title">✍️✍️✍️</p><ol><li>对于属性 <code>index</code> 组件代码自动生成 <code>1-1-1-1</code></li><li><code>onSelect</code> 方法返回的信息, 现在返回的是当前的<code>index</code>, 应该返回<code>menuItem</code>实例</li><li><code>menu subMenu menuItem</code> 组件插槽展示逻辑&amp;插槽组件校验</li><li><code>subMenu</code> 组件支持 <code>disabled</code></li><li><code>hover</code> 样式会微动优化</li><li><code>menu subMenu menuItem</code> provide inject 类型定义</li></ol></div>`,5),n=[i];function d(l,c,p,r,h,u){return a(),s("div",null,n)}const _=e(t,[["render",d]]);export{k as __pageData,_ as default};
